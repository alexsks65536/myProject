import csv


def func1():
    with open("classmates.csv", encoding='utf-8') as r_file:
        # Создаем объект reader, указываем символ-разделитель ","
        file_reader = csv.reader(r_file, delimiter=",")
        # Счетчик для подсчета количества строк и вывода заголовков столбцов
        count = 0
        # Считывание данных из CSV файла
        for row in file_reader:
            if count == 0:
                # Вывод строки, содержащей заголовки для столбцов
                print(f'Файл содержит столбцы: {", ".join(row)}')
            else:
                # Вывод строк
                print(f'    {row[0]} - {row[1]} и он родился в {row[2]} году.')
            count += 1
        print(f'Всего в файле {count} строк.')


def func2():
    """
    Библиотека CSV позволяет работать с файлами, как со словарями, для этого нужно создать объект DictReader.
    Обращаться к элементам можно по имени столбцов, а не с помощью индексов.
    Для того, чтобы исходная программа делала аналогичный вывод, её следует изменить следующим образом:
    :return:
    """
    with open("classmates.csv", encoding='utf-8') as r_file:
        # Создаем объект DictReader, указываем символ-разделитель ","
        file_reader = csv.DictReader(r_file, delimiter=",")
        # Счетчик для подсчета количества строк и вывода заголовков столбцов
        count = 0
        # Считывание данных из CSV файла
        for row in file_reader:
            if count == 0:
                # Вывод строки, содержащей заголовки для столбцов
                print(f'Файл содержит столбцы: {", ".join(row)}')
            # Вывод строк
            print(f' {row["Имя"]} - {row["Успеваемость"]}', end='')
            print(f' и он родился в {row["Год рождения"]} году.')
            count += 1
        print(f'Всего в файле {count + 1} строк.')


func1()
func2()

